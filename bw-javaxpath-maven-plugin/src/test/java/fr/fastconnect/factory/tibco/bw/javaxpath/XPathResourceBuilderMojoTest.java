/**
 * (C) Copyright 2011-2015 FastConnect SAS
 * (http://www.fastconnect.fr/) and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.fastconnect.factory.tibco.bw.javaxpath;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

public class XPathResourceBuilderMojoTest {

	private XPathResourceBuilderMojo mojo;
	
	@Before
	public void init() {
		this.mojo = new XPathResourceBuilderMojo();
	}
	
	@Test
	public void extractFileContent() throws Exception {
//		assertEquals("line1  line 2", this.mojo.extractFileContent("someFoldersomeFile.txt"));
	}
	
	@Test
	public void testGetBytesForClass() throws Exception {

		final byte rawData[] = {
			(byte)0xCA, (byte)0xFE, (byte)0xBA, (byte)0xBE, (byte)0x00, (byte)0x00,
			(byte)0x00, (byte)0x32, (byte)0x00, (byte)0x10, (byte)0x07, (byte)0x00,
			(byte)0x02, (byte)0x01, (byte)0x00, (byte)0x31, (byte)0x66, (byte)0x72,
			(byte)0x2F, (byte)0x66, (byte)0x61, (byte)0x73, (byte)0x74, (byte)0x63,
			(byte)0x6F, (byte)0x6E, (byte)0x6E, (byte)0x65, (byte)0x63, (byte)0x74,
			(byte)0x2F, (byte)0x74, (byte)0x69, (byte)0x62, (byte)0x63, (byte)0x6F,
			(byte)0x2F, (byte)0x66, (byte)0x61, (byte)0x63, (byte)0x74, (byte)0x6F,
			(byte)0x72, (byte)0x79, (byte)0x2F, (byte)0x6A, (byte)0x61, (byte)0x76,
			(byte)0x61, (byte)0x78, (byte)0x70, (byte)0x61, (byte)0x74, (byte)0x68,
			(byte)0x2F, (byte)0x45, (byte)0x6D, (byte)0x70, (byte)0x74, (byte)0x79,
			(byte)0x43, (byte)0x6C, (byte)0x61, (byte)0x73, (byte)0x73, (byte)0x07,
			(byte)0x00, (byte)0x04, (byte)0x01, (byte)0x00, (byte)0x10, (byte)0x6A,
			(byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2F, (byte)0x6C, (byte)0x61,
			(byte)0x6E, (byte)0x67, (byte)0x2F, (byte)0x4F, (byte)0x62, (byte)0x6A,
			(byte)0x65, (byte)0x63, (byte)0x74, (byte)0x01, (byte)0x00, (byte)0x06,
			(byte)0x3C, (byte)0x69, (byte)0x6E, (byte)0x69, (byte)0x74, (byte)0x3E,
			(byte)0x01, (byte)0x00, (byte)0x03, (byte)0x28, (byte)0x29, (byte)0x56,
			(byte)0x01, (byte)0x00, (byte)0x04, (byte)0x43, (byte)0x6F, (byte)0x64,
			(byte)0x65, (byte)0x0A, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x09,
			(byte)0x0C, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x06, (byte)0x01,
			(byte)0x00, (byte)0x0F, (byte)0x4C, (byte)0x69, (byte)0x6E, (byte)0x65,
			(byte)0x4E, (byte)0x75, (byte)0x6D, (byte)0x62, (byte)0x65, (byte)0x72,
			(byte)0x54, (byte)0x61, (byte)0x62, (byte)0x6C, (byte)0x65, (byte)0x01,
			(byte)0x00, (byte)0x12, (byte)0x4C, (byte)0x6F, (byte)0x63, (byte)0x61,
			(byte)0x6C, (byte)0x56, (byte)0x61, (byte)0x72, (byte)0x69, (byte)0x61,
			(byte)0x62, (byte)0x6C, (byte)0x65, (byte)0x54, (byte)0x61, (byte)0x62,
			(byte)0x6C, (byte)0x65, (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x74,
			(byte)0x68, (byte)0x69, (byte)0x73, (byte)0x01, (byte)0x00, (byte)0x33,
			(byte)0x4C, (byte)0x66, (byte)0x72, (byte)0x2F, (byte)0x66, (byte)0x61,
			(byte)0x73, (byte)0x74, (byte)0x63, (byte)0x6F, (byte)0x6E, (byte)0x6E,
			(byte)0x65, (byte)0x63, (byte)0x74, (byte)0x2F, (byte)0x74, (byte)0x69,
			(byte)0x62, (byte)0x63, (byte)0x6F, (byte)0x2F, (byte)0x66, (byte)0x61,
			(byte)0x63, (byte)0x74, (byte)0x6F, (byte)0x72, (byte)0x79, (byte)0x2F,
			(byte)0x6A, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x78, (byte)0x70,
			(byte)0x61, (byte)0x74, (byte)0x68, (byte)0x2F, (byte)0x45, (byte)0x6D,
			(byte)0x70, (byte)0x74, (byte)0x79, (byte)0x43, (byte)0x6C, (byte)0x61,
			(byte)0x73, (byte)0x73, (byte)0x3B, (byte)0x01, (byte)0x00, (byte)0x0A,
			(byte)0x53, (byte)0x6F, (byte)0x75, (byte)0x72, (byte)0x63, (byte)0x65,
			(byte)0x46, (byte)0x69, (byte)0x6C, (byte)0x65, (byte)0x01, (byte)0x00,
			(byte)0x0F, (byte)0x45, (byte)0x6D, (byte)0x70, (byte)0x74, (byte)0x79,
			(byte)0x43, (byte)0x6C, (byte)0x61, (byte)0x73, (byte)0x73, (byte)0x2E,
			(byte)0x6A, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x00, (byte)0x21,
			(byte)0x00, (byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00,
			(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x01,
			(byte)0x00, (byte)0x05, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x01,
			(byte)0x00, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2F,
			(byte)0x00, (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00,
			(byte)0x00, (byte)0x05, (byte)0x2A, (byte)0xB7, (byte)0x00, (byte)0x08,
			(byte)0xB1, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00,
			(byte)0x0A, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00,
			(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
			(byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0C, (byte)0x00,
			(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x05, (byte)0x00,
			(byte)0x0C, (byte)0x00, (byte)0x0D, (byte)0x00, (byte)0x00, (byte)0x00,
			(byte)0x01, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00,
			(byte)0x02, (byte)0x00, (byte)0x0F
		};

//		assertArrayEquals(rawData, this.mojo.getBytesForClass("fr.fastconnect.factory.tibco.javaxpath.EmptyClass"));
	}
	
}
